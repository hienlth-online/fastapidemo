[{"F:\\ReactJS\\ReactHook\\my-react-hook\\src\\index.js":"1","F:\\ReactJS\\ReactHook\\my-react-hook\\src\\App.js":"2","F:\\ReactJS\\ReactHook\\my-react-hook\\src\\reportWebVitals.js":"3","F:\\ReactJS\\ReactHook\\my-react-hook\\src\\pages\\Button.js":"4","F:\\ReactJS\\ReactHook\\my-react-hook\\src\\pages\\DataLoader.js":"5","F:\\ReactJS\\ReactHook\\my-react-hook\\src\\pages\\GithubCommit.js":"6","F:\\ReactJS\\ReactHook\\my-react-hook\\src\\services\\list.js":"7","F:\\ReactJS\\ReactHook\\my-react-hook\\src\\components\\ItemList.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":403,"mtime":1607263728888,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":502,"mtime":1607243957234,"results":"13","hashOfConfig":"10"},{"size":689,"mtime":1607260176586,"results":"14","hashOfConfig":"10"},{"size":1471,"mtime":1607260416885,"results":"15","hashOfConfig":"10"},{"size":393,"mtime":1607266718565,"results":"16","hashOfConfig":"10"},{"size":1683,"mtime":1607267218117,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1itxswo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\ReactJS\\ReactHook\\my-react-hook\\src\\index.js",[],["36","37"],"F:\\ReactJS\\ReactHook\\my-react-hook\\src\\App.js",[],"F:\\ReactJS\\ReactHook\\my-react-hook\\src\\reportWebVitals.js",[],"F:\\ReactJS\\ReactHook\\my-react-hook\\src\\pages\\Button.js",[],"F:\\ReactJS\\ReactHook\\my-react-hook\\src\\pages\\DataLoader.js",["38"],"import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function DataLoader(props) {\r\n    const [data, setData] = useState([]);\r\n    const [folder, setFolder] = useState('sdc');\r\n\r\n    useEffect(() => {\r\n        setFolder(props.folder);\r\n\r\n        fetch(`http://localhost:8000/jsonlist/${folder}`)\r\n            .then(response => response.json())\r\n            .then(data => setData(data.data));\r\n        console.log(data);\r\n    }, [folder]);\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {/* {data.map(el => (\r\n                    <li key={el.folder + '_' + el.module}>{el.module}</li>\r\n                ))} */}\r\n            </ul>\r\n        </div>\r\n    );\r\n}","F:\\ReactJS\\ReactHook\\my-react-hook\\src\\pages\\GithubCommit.js",[],"F:\\ReactJS\\ReactHook\\my-react-hook\\src\\services\\list.js",[],"F:\\ReactJS\\ReactHook\\my-react-hook\\src\\components\\ItemList.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":14,"column":8,"nodeType":"45","endLine":14,"endColumn":16,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'props.folder'. Either include them or remove the dependency array. If 'setFolder' needs the current value of 'props.folder', you can also switch to useReducer instead of useState and read 'props.folder' in the reducer.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [data, folder, props.folder]",{"range":"52","text":"53"},[444,452],"[data, folder, props.folder]"]